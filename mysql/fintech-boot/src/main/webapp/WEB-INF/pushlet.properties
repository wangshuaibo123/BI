#
# Pushlet configuration.
# Place this file in the CLASSPATH (e.g. WEB-INF/classes) or directly under WEB-INF.
#
# $Id: pushlet.properties,v 1.13 2007/12/07 12:57:40 justb Exp $
#

#
#
#\u914D\u7F6E\u7248\u672C\u53F7
config.version=1.0.2

#
# CLASS FACTORY SPECIFICATION
#
# Change these if you want to override any of the core classes
# within the Pushlet framework with your own custom classes.
#
# Examples:
# - custom SessionManager for authorisation
# - maintain lists of active subjects (topics)
# - send events on subscription
# - plug in custom logging like log4j
# Note that you must maintain the semantics of each class !
# Below are the default properties for the core classes.
# \u6D88\u606F\u63A7\u5236\u5668
controller.class=nl.justobjects.pushlet.core.Controller
# \u6D88\u606F\u5206\u53D1\u5668
dispatcher.class=nl.justobjects.pushlet.core.Dispatcher
# \u65E5\u5FD7
logger.class=nl.justobjects.pushlet.util.Log4jLogger
# logger.class=nl.justobjects.pushlet.util.DefaultLogger
# \u4F1A\u8BDD\u7BA1\u7406\u5668
sessionmanager.class=nl.justobjects.pushlet.core.SessionManager
# \u4F1A\u8BDD
session.class=nl.justobjects.pushlet.core.Session
# \u8BA2\u9605\u7BA1\u7406\u5668
subscriber.class=nl.justobjects.pushlet.core.Subscriber
# \u8BA2\u9605\u4F53
subscription.class=nl.justobjects.pushlet.core.Subscription

#
# LOGGING
#

# log level (trace(6) debug(5) info (4), warn(3), error(2), fatal(1))
# default is info(4)
# \u65E5\u5FD7\u7B49\u7EA7  1:fatal  2:error  3:warn  4:info  5:debug  6:trace
log.level=4

#
# LOCAL EVENT SOURCES
#
#
# should local sources be loaded ?
# \u662F\u5426\u6FC0\u6D3B\u4E8B\u4EF6\u6E90\uFF0C\u5728\u6B64\u6211\u4EEC\u5C06\u5176\u8BBE\u7F6E\u4E3Afalse\uFF0C\u56E0\u6211\u4EEC\u4E0D\u91C7\u7528\u8FD9\u79CD\u65B9\u5F0F\u6765\u53D1\u5E03\u6D88\u606F\uFF0C\u7CFB\u7EDF\u4E2D\u4E5F\u4E0D\u5B58\u5728\u54CD\u5E94\u7684sources.properties\u6587\u4EF6
sources.activate=false

#
# SESSION
#


# algoritm to generate session key:
# values: "randomstring" (default) or "uuid".
# session.id.generation=uuid
# \u4F1A\u8BDD\u7F16\u53F7\u7684\u751F\u6210\u7B56\u7565\uFF0C\u5305\u62ECuuid\u548Crandomstring
session.id.generation=randomstring

# length of generated session key when using "randomstring" generation
# \u5F53\u91C7\u7528randomstring\u8FD9\u79CD\u4F1A\u8BDD\u7F16\u53F7\u751F\u6210\u7B56\u7565\u7684\u7F16\u53F7\u957F\u5EA6
session.id.size=10

# Overall session lease time in minutes
# Mainly used for clients that do not perform
# listening, e.g. when publishing only.
# Session\u8FC7\u671F\u7684\u6700\u5C0F\u65F6\u95F4
session.timeout.mins=5

#
# EVENT QUEUE
#
# Properties for per-client data event queue

# Size for
# \u6D88\u606F\u961F\u5217\u5BB9\u5668\u5927\u5C0F
queue.size=24
# \u6D88\u606F\u961F\u5217\u82E5\u4E3A\u7A7A\uFF0C\u7B49\u5F85\u518D\u6B21\u8BFB\u53D6\u6D4B\u65F6\u95F4\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2
queue.read.timeout.millis=20000
# \u6D88\u606F\u961F\u5217\u82E5\u6EE1\uFF0C\uFF0C\u518D\u6B21\u5199\u5165\u9700\u7B49\u5F85\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2
queue.write.timeout.millis=20

#
# LISTENING MODE
#

# You may force all clients to use pull mode
# for scalability
# \u662F\u5426\u5F3A\u5236\u9488\u5BF9\u5BA2\u6237\u7AEF\u91C7\u7528pull\u58A8\u6C34\u7B14
# \u6D88\u606F\u63A8\u9001\u6A21\u5F0F\u5206\u4E3A:pull/poll/stream,\u7EDD\u5927\u591A\u6570\u6D4F\u89C8\u5668\u90FD\u652F\u6301pull\u6A21
# \u5F0F\uFF0C\u5176\u4ED6\u4E24\u79CD\u6A21\u5F0F\u53EA\u6709\u5C11\u6570\u6D4F\u89C8\u5668\u652F\u6301
listen.force.pull.all=false

#
# Comma-separated list of User Agent substrings.
# Force these browsers to use pull mode, since they
# don't support JS streaming, matching is done using
# String.indexOf() with lowercased agent strings
# use multiple criteria with &.
# \u5F3A\u5236\u4F7F\u7528pull\u6A21\u5F0F\u7684\u6D4F\u89C8\u5668,\u9ED8\u8BA4\u4E3Asafari
listen.force.pull.agents=safari

#
# PULL MODE
#

# time server should wait on refresing pull client
pull.refresh.timeout.millis=45000

# minimum/maximum wait time client should wait before refreshing
# server provides a random time between these values
# \u8BE5\u4E24\u79CD\u914D\u7F6E\u6839\u636E\u67D0\u79CD\u89C4\u5219\u751F\u6210\u7684\u65F6\u95F4\uFF0C\u5C06\u4F5C\u4E3A\u63A8\u9001\u5230
# \u5BA2\u6237\u7AEF\u54CD\u5E94\u4E8B\u4EF6\u4E2D\u5C5E\u6027p_wait\u7684\u503C\uFF08\u9875\u9762\u7B49\u5F85\u7684\u65F6\u95F4\uFF09
pull.refresh.wait.min.millis=2000
pull.refresh.wait.max.millis=6000

#
# POLL MODE
#

# time server should wait on refresing poll client
poll.refresh.timeout.millis=60000

# minimum/maximum wait time client should wait before refreshing
# server provides a random time between these values
# \u540Cpull\u6A21\u5F0F
poll.refresh.wait.min.millis=6000
poll.refresh.wait.max.millis=10000
