<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    <bean id="roleOrFilter" class="com.jy.modules.platform.sysauth.service.shiro.RolesOrFilter">
    </bean>
	
	
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="dbAuthRealm" /><!-- 开发环境登录时： dbAuthRealm ，CAS登录时：casAuthRealm-->
		<property name="subjectFactory" ref="casSubjectFactory"/>  
		<property name="sessionManager" ref="defaultWebSessionManager" />
		<!-- <property name="cacheManager" ref="shiroCacheManager" /> -->
	</bean>
	
	<!-- 会话验证调度器 -->  
	<bean id="customSessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler"> 
		<property name="interval" value="1000000"/>
		<property name="sessionManager" ref="defaultWebSessionManager" />
	</bean>
	
	<bean id="defaultWebSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="18000000"/>
        <!-- 使用redis存储session信息 -->
        <!-- <property name="sessionDAO" ref="customShiroSessionDAO"/> -->
        <property name="sessionIdCookie" ref="simpleCookie"/>
        <property name="sessionValidationScheduler" ref="customSessionValidationScheduler"/>
    </bean>
    <bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg index="0" value="JSESSIONID_COOKIE"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>
	
    
    <bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
        <property name="failureUrl" value="/casFailure.jsp"/>
    </bean>
    
	<bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"/>  
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">  
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>  
        <property name="arguments" ref="securityManager"/>  
    </bean> 
    
    
    <bean id="casFormAuthenticationFilter" class="com.jy.modules.platform.sysauth.service.shiro.CasFormAuthenticationFilter" />
    
    
	 <!-- 开发环境通过连接DB登录 -->
	<bean id="dbAuthRealm" class="com.jy.modules.platform.sysauth.service.shiro.DbAuthRealm" >
		<property name="orgAPI" ref="orgAPI"/>
		<property name="sysAuthAPI" ref="sysAuthAPI"/>
	</bean>
	
	<!-- 开发环境使用 此配置 强制退出登录 -->
    <bean id="forceLogoutFilterV0" class="com.jy.modules.platform.sysauth.service.shiro.ForceLogoutFilterV0">
	    <property name="forceUrl" value="http://127.0.0.1:8080/loan/forceLogin.jsp"/>
	    <property name="sysConfigParam" value="isRefuseLogin"/>
    </bean>

	
    <!-- 开发环境时 非CAS 登录时配置  -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" depends-on="roleOrFilter">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/user/toLogin"/>
        <property name="successUrl" value="/user/home"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <property name="filterChainDefinitions" value="#{shiroAuthService.loadFilterChainDefinitions()}"/>   
        <property name="filters">
           <map>
           	  <entry key="cauthc" value-ref="casFormAuthenticationFilter"/>
              <entry key="roleOrFilter" value-ref="roleOrFilter"/>
              <entry key="forceLogout" value-ref="forceLogoutFilterV0"/>
              <entry key="cas" value-ref="casFilter"/>
           </map>
        </property>
    </bean>
    
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<bean id="springshiroHello2" class="com.jy.platform.hello.Hello2" init-method="start" lazy-init="false">
    	<property name="name" value="spring-shiro.xml"></property>
    </bean>
</beans>