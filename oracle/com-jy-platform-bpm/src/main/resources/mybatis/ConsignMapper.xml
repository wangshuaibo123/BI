<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jy.platform.jbpm4.repository.ConsignMapper" >
<resultMap id="BaseResultMap" type="com.jy.platform.jbpm4.dto.Consign">
		<id column="ID" property="id" jdbcType="DECIMAL" />
		<result column="FROM_USER_ID" property="fromUserId" jdbcType="VARCHAR" />
		<result column="TO_USER_ID" property="toUserId" jdbcType="VARCHAR" />
		<result column="PRO_DEF_KEY" property="proDefKey" jdbcType="VARCHAR" />
		<result column="TYPE" property="type" jdbcType="VARCHAR" />
		<result column="REASON" property="reason" jdbcType="VARCHAR" />
		<result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
		<result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
		<result column="VALIDATE_STATE" property="valiDateState" jdbcType="VARCHAR" />
		<result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" />
		<result column="CREATED" property="created" jdbcType="TIMESTAMP" />
		<result column="LAST_UPD_BY" property="lastUpdBy" jdbcType="VARCHAR" />
		<result column="LAST_UPD" property="lastUpd" jdbcType="TIMESTAMP" />
		<result column="REMARK" property="remark" jdbcType="VARCHAR" />
		
	</resultMap>
  <select id="getConsignByPage" parameterType="java.util.Map" resultType="java.util.Map" >
  SELECT TEMP.* FROM (
    select  ROWNUM NUM,
    res.*,
    count(1) over() totalRecordNum
    	from(
         select 
		         t.ID
		        ,t.FROM_USER_ID
		        ,t.TO_USER_ID
		        ,t.PRO_DEF_KEY
		        ,t.TYPE
		        ,t.REASON
		        ,to_char(t.START_TIME,'YYYY-MM-DD HH24:MI:SS') START_TIME
		        ,to_char(t.END_TIME,'YYYY-MM-DD HH24:MI:SS') END_TIME
		        ,t.VALIDATE_STATE
		        ,t.CREATED_BY
		        ,to_char(t.CREATED,'YYYY-MM-DD HH24:MI:SS') CREATED
		        ,t.LAST_UPD_BY
		        ,to_char(t.LAST_UPD,'YYYY-MM-DD HH24:MI:SS') LAST_UPD
		        ,t.REMARK
			 
     	from JBPM4_CONSIGN_PERSON t 
    	where t.VALIDATE_STATE = '1' 
 	    <if test="reason != null and reason != ''">
       		and t.REASON like '%'||#{REASON}||'%'
	 	</if>
 	    <if test="remark != null and remark != ''">
       		and t.REMARK like '%'||#{remark}||'%'
	 	</if>
	 	<if test="fromUserId != null and fromUserId != ''">
       		and t.FROM_USER_ID = #{fromUserId}
	 	</if>
	 	<if test="toUserId != null and toUserId != ''">
       		and t.TO_USER_ID = #{toUserId}
	 	</if>
	 	<if test="createdBy != null and createdBy != ''">
       		and t.CREATED_BY = #{createdBy}
	 	</if>
	 	<if test="proDefKey != null and proDefKey != ''">
       		and t.PRO_DEF_KEY = #{proDefKey} 
	 	</if>
		<if test="startTime != null and startTime != ''" >    
            and  <![CDATA[  t.start_time >= to_date(#{startTime},'YYYY-MM-DD HH24:MI:SS') ]]>
        </if>
        <if test="endTime != null and endTime != ''" >    
            and  <![CDATA[  t.end_time <=  to_date(#{endTime},'YYYY-MM-DD HH24:MI:SS') ]]>
        </if>
       <if test="isAdmin != 1">
        	and (t.FROM_USER_ID = #{loginUserId} or t.CREATED_BY = #{loginUserId})
        </if>
 			order by T.ID 	desc
    	) res 
		) TEMP
		
			<if test="page != null" >    
	            <![CDATA[WHERE TEMP.NUM > #{startIndex} and TEMP.NUM <= #{endIndex} ]]>
	        </if>
  </select>
  
   <insert id="addConsign" parameterType="java.util.Map" useGeneratedKeys="true">
   		<selectKey resultType="Long" keyProperty="id" order="BEFORE">
			select seq_jbpm4_consign_person.nextval as id from dual
		</selectKey>
		insert into JBPM4_CONSIGN_PERSON (ID, FROM_USER_ID, TO_USER_ID,
		PRO_DEF_KEY, TYPE, REASON,
		START_TIME, END_TIME, VALIDATE_STATE,
		CREATED, CREATED_BY, LAST_UPD_BY,
		LAST_UPD, REMARK) 
		values (#{id,jdbcType=DECIMAL}, #{model.fromUserId,jdbcType=VARCHAR},
		#{model.toUserId,jdbcType=VARCHAR},
		#{model.proDefKey,jdbcType=VARCHAR}, #{model.type,jdbcType=VARCHAR}, #{model.reason,jdbcType=VARCHAR},
		to_date(#{model.startTimeStr},'YYYY-MM-DD HH24:MI:SS'), to_date(#{model.endTimeStr},'YYYY-MM-DD HH24:MI:SS'),
		#{model.valiDateState,jdbcType=VARCHAR},
		to_date(#{model.createdStr},'YYYY-MM-DD HH24:MI:SS'), #{model.createdBy,jdbcType=VARCHAR},
		#{model.lastUpdBy,jdbcType=VARCHAR}, to_date(#{model.lastUpdStr},'YYYY-MM-DD HH24:MI:SS'),
		#{model.remark,jdbcType=VARCHAR}
		)
   
   </insert>
   <!-- 通过定时任务 更改失效的任务委托 数据 -->
     <update id="updateConsignValidateState" parameterType="java.util.Map" >
	    update JBPM4_CONSIGN_PERSON t
	    set 
	         t.VALIDATE_STATE='0'
	        ,t.LAST_UPD_BY='1'
	        ,t.LAST_UPD=systimestamp
	    where t.end_time <![CDATA[ <= ]]> systimestamp
	    	  and t.VALIDATE_STATE='1'
  	</update>
  
    <select id="findAllConsignCount" resultType="int" parameterType="java.util.Map">
        select count(1) from JBPM4_CONSIGN_PERSON t where t.VALIDATE_STATE = '1' 
       <if test="reason != null and reason != ''">
       		and t.REASON like '%'||#{REASON}||'%'
	 	</if>
 	    <if test="remark != null and remark != ''">
       		and t.REMARK like '%'||#{remark}||'%'
	 	</if>
	 	<if test="fromUserId != null and fromUserId != ''">
       		and t.FROM_USER_ID = #{fromUserId}
	 	</if>
	 	<if test="toUserId != null and toUserId != ''">
       		and t.TO_USER_ID = #{toUserId}
	 	</if>	 	
	 	<if test="createdBy != null and createdBy != ''">
       		and t.CREATED_BY = #{createdBy}
	 	</if>
	 	<if test="proDefKey != null and proDefKey != ''">
       		and t.PRO_DEF_KEY = #{proDefKey}
	 	</if>
		<if test="startTime != null and startTime != ''" >    
            and  <![CDATA[  t.start_time >= to_date(#{startTime},'YYYY-MM-DD HH24:MI:SS') ]]>
        </if>
        <if test="endTime != null and endTime != ''" >    
            and  <![CDATA[  t.end_time <=  to_date(#{endTime},'YYYY-MM-DD HH24:MI:SS') ]]>
        </if>
        <if test="isAdmin != 1">
        	and (t.FROM_USER_ID = #{loginUserId} or t.CREATED_BY = #{loginUserId})
        </if>
        
    </select>
    
	  <select id="getById" resultMap="BaseResultMap" parameterType="int" >
	   	  select * from JBPM4_CONSIGN_PERSON where ID = #{id,jdbcType=DECIMAL}
	  </select>
	  
  	     <select id="consignToOther" resultType="int" parameterType="java.util.Map">
	   	  select count(1) 
	   	  from JBPM4_CONSIGN_PERSON t 
	   	  where t.VALIDATE_STATE = '1' 
	   	  <if test="startTime != null and startTime != ''" >    
          	and ( <![CDATA[  t.end_time >= to_date(#{startTime},'YYYY-MM-DD HH24:MI:SS') ]]> or t.end_time is null) 
          </if>
          <if test="endTime != null and endTime != ''" >    
          and ( <![CDATA[  t.start_time <=  to_date(#{endTime},'YYYY-MM-DD HH24:MI:SS') ]]> or t.start_time is null) 
          </if>
          
          <if test="toUserId != null and toUserId != ''" >
          	and t.from_user_id = #{toUserId} 
          </if>
          
          <if test="id != null and id != ''" >
          	and t.ID != #{id} 
          </if>
	  </select>
	  
    <select id="repeatConsign" resultType="int" parameterType="java.util.Map">
	   	  select count(1) from JBPM4_CONSIGN_PERSON t where t.VALIDATE_STATE = '1'  
	   	  
          and ( <![CDATA[  t.end_time >= to_date(#{startTime},'YYYY-MM-DD HH24:MI:SS') ]]> or t.end_time is null) 
        
          and ( <![CDATA[  t.start_time <=  to_date(#{endTime},'YYYY-MM-DD HH24:MI:SS') ]]> or t.start_time is null) 
          
          <if test="fromUserId != null and fromUserId != ''" >
          	and t.from_user_id = #{fromUserId} 
          </if>
          <if test="id != null and id != ''" >
          	and t.ID != #{id} 
          </if>
	  </select>
	  
  	  <update id="delById" parameterType="int" >
  	  begin
  	   		/*找回 未处理的待办任务 且 是解锁状态*/
	   		update jbpm4_consigned_task ct1 set ct1.last_upd_by=sysdate,ct1.remark='人工取消工作委托'
			where ct1.task_id in(
			      select ct.task_id from jbpm4_consigned_task ct 
			      where ct.validate_state='1'
			      and ct.from_user_id=(select cp.from_user_id from jbpm4_consign_person cp where cp.id='${id}') 
			      and ct.to_user_id=(select cp.to_user_id from jbpm4_consign_person cp where cp.id='${id}') 
			      and exists (select t.* from jbpm4_task t where t.lock_state ='0' and t.dbid_ = ct.task_id )
			      and ct.remark is null	
			)
			and ct1.last_upd_by='${curUserId}'
			and ct1.remark is null;	
			
			update jbpm4_task t 
			set  t.assignee_ = (select cp.from_user_id from jbpm4_consign_person cp where cp.id='${id}') 
			where t.dbid_ in(
			      select ct.task_id from jbpm4_consigned_task ct 
			      where ct.validate_state='1'
			      and ct.from_user_id=(select cp.from_user_id from jbpm4_consign_person cp where cp.id='${id}') 
			      and ct.to_user_id=(select cp.to_user_id from jbpm4_consign_person cp where cp.id='${id}') 
			      and exists (select t.* from jbpm4_task t where t.lock_state ='0' and t.dbid_ = ct.task_id )
			      and ct.remark is null
			);
			
			update jbpm4_hist_task ht 
			set  ht.assignee_ = (select cp.from_user_id from jbpm4_consign_person cp where cp.id='${id}') 
			where ht.dbid_ in(
			      select ct.task_id from jbpm4_consigned_task ct 
			      where ct.validate_state='1'
			      and ct.from_user_id=(select cp.from_user_id from jbpm4_consign_person cp where cp.id='${id}') 
			      and ct.to_user_id=(select cp.to_user_id from jbpm4_consign_person cp where cp.id='${id}') 
			      and exists (select t.* from jbpm4_task t where t.lock_state ='0' and t.dbid_ = ct.task_id )
			      and ct.remark is null
			);
			
  	  		/*假删除 任务委托记录*/
  	   		update jbpm4_consign_person  set validate_state = '0' where id = '${id}';
  	   		
  	  end;
		 
	  </update>
	  <select id="findQuartzJobByName" parameterType="java.util.Map" resultType="java.util.Map" >
        select 
        Q2.JOB_CLASS_NAME
        ,Q2.JOB_NAME 
        from 
        QRTZ_JOB_DETAILS q2 
        INNER JOIN QRTZ_TRIGGERS q3 
        on Q3.JOB_NAME=Q2.JOB_NAME
         where Q3.TRIGGER_NAME = #{triggerName}
  	 </select>
  	 
  	  <select id="getConsignTask"  parameterType="java.util.Map" resultMap="BaseResultMap" >
	 
	   	  select * from JBPM4_CONSIGN_PERSON t where t.VALIDATE_STATE = '1' 
	   	  
          and ( <![CDATA[  t.end_time >= sysdate ]]> or t.end_time is null) 
        
          and ( <![CDATA[  t.start_time <=  sysdate ]]> or t.start_time is null) order by t.from_user_id asc 
          
	  </select>
	  
  
</mapper>